<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference class="- topic/topic       reference/reference " ditaarch:DITAArchVersion="1.2" domains="(topic reference)                                   (topic hi-d)                     (topic ut-d)                     (topic indexing-d)                     (topic hazard-d)                     (topic abbrev-d)                     (topic pr-d)                     (topic sw-d)                     (topic ui-d)    " id="Max" xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/">
  <title class="- topic/title ">Absolute Maximum Ratings</title>
  <refbody class="- topic/body        reference/refbody ">
    <section class="- topic/section ">
      <p class="- topic/p " id="el.chara.table.Max.p">
        <table class="- topic/table " id="el.chara.table.Max">
          <title class="- topic/title ">Absolute Maximum Ratings</title>
          <tgroup class="- topic/tgroup " cols="7">
            <colspec class="- topic/colspec " colname="c_0" colwidth="3*"/>
            <colspec class="- topic/colspec " colname="c_1" colwidth="1.8*"/>
            <colspec class="- topic/colspec " colname="c_2" colwidth="3.5*"/>
            <colspec align="center" class="- topic/colspec " colname="c_3" colwidth="1.3*"/>
            <colspec align="center" class="- topic/colspec " colname="c_4" colwidth="1.3*"/>
            <colspec align="center" class="- topic/colspec " colname="c_5" colwidth="1.3*"/>
            <colspec align="center" class="- topic/colspec " colname="c_6" colwidth="1*"/>
            <thead class="- topic/thead ">
              <row class="- topic/row ">
                <entry class="- topic/entry ">Parameter</entry>
                <entry class="- topic/entry ">Symbol</entry>
                <entry class="- topic/entry ">Test Condition</entry>
                <entry align="center" class="- topic/entry ">Min</entry>
                <entry align="center" class="- topic/entry ">Typ</entry>
                <entry align="center" class="- topic/entry ">Max</entry>
                <entry align="center" class="- topic/entry ">Unit</entry>
              </row>
            </thead>
            <tbody class="- topic/tbody ">
              <row class="- topic/row ">
                <entry class="- topic/entry ">Storage temperature range</entry>
                <entry class="- topic/entry ">T<sub class="+ topic/ph hi-d/sub ">STG</sub></entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/nbsp"/>
                </entry>
                <entry class="- topic/entry ">-40</entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/emdash"/>
                </entry>
                <entry class="- topic/entry ">+85</entry>
                <entry class="- topic/entry "><ph class="- topic/ph " conkeyref="keys/deg"/>C </entry>
              </row>
              <row class="- topic/row ">
                <entry class="- topic/entry ">External main supply voltage</entry>
                <entry class="- topic/entry ">V<sub class="+ topic/ph hi-d/sub ">DDMAX</sub></entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/nbsp"/>
                </entry>
                <entry class="- topic/entry ">0</entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/emdash"/>
                </entry>
                <entry class="- topic/entry ">3.8</entry>
                <entry class="- topic/entry ">V</entry>
              </row>
              <row class="- topic/row ">
                <entry class="- topic/entry ">External main supply voltage ramp rate</entry>
                <entry class="- topic/entry ">V<sub class="+ topic/ph hi-d/sub ">DDRAMPMAX</sub></entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/nbsp"/>
                </entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/emdash"/>
                </entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/emdash"/>
                </entry>
                <entry class="- topic/entry ">1</entry>
                <entry class="- topic/entry ">V / <ph class="- topic/ph " conkeyref="keys/micro"/>s</entry>
              </row>
              <row class="- topic/row ">
                <entry class="- topic/entry ">External main supply voltage with DC-DC in bypass
                  mode</entry>
                <entry class="- topic/entry "/>
                <entry class="- topic/entry "/>
                <entry class="- topic/entry ">1.85</entry>
                <entry class="- topic/entry "/>
                <entry class="- topic/entry ">3.8</entry>
                <entry class="- topic/entry ">V</entry>
              </row>
              <row class="- topic/row ">
                <entry class="- topic/entry ">Voltage on any 5V tolerant GPIO pin<sup class="+ topic/ph hi-d/sup "><xref class="- topic/xref " href="#Max/Max.table.footnote.0"/></sup></entry>
                <entry class="- topic/entry " morerows="1">V<sub class="+ topic/ph hi-d/sub ">DIGPIN</sub></entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/nbsp"/>
                </entry>
                <entry class="- topic/entry ">-0.3</entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/emdash"/>
                </entry>
                <entry class="- topic/entry ">Min of 5.25 and IOVDD+2</entry>
                <entry class="- topic/entry ">V</entry>
              </row>
              <row class="- topic/row ">
                <entry class="- topic/entry ">Voltage on non-5V tolerant GPIO pins</entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/nbsp"/>
                </entry>
                <entry class="- topic/entry ">-0.3</entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/emdash"/>
                </entry>
                <entry class="- topic/entry ">IOVDD+0.3</entry>
                <entry class="- topic/entry ">V</entry>
              </row>
              <row class="- topic/row ">
                <entry class="- topic/entry ">Max RF level at input</entry>
                <entry class="- topic/entry ">P<sub class="+ topic/ph hi-d/sub ">RFMAX2G4</sub></entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/nbsp"/>
                </entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/emdash"/>
                </entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/emdash"/>
                </entry>
                <entry class="- topic/entry ">10</entry>
                <entry class="- topic/entry ">dBm</entry>
              </row>
              <row class="- topic/row ">
                <entry class="- topic/entry ">Total current into VDD power lines (source)</entry>
                <entry class="- topic/entry ">I<sub class="+ topic/ph hi-d/sub ">VDDMAX</sub></entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/nbsp"/>
                </entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/emdash"/>
                </entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/emdash"/>
                </entry>
                <entry class="- topic/entry ">200</entry>
                <entry class="- topic/entry ">mA</entry>
              </row>
              <row class="- topic/row ">
                <entry class="- topic/entry ">Total current into VSS ground lines (sink)</entry>
                <entry class="- topic/entry ">I<sub class="+ topic/ph hi-d/sub ">VSSMAX</sub></entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/nbsp"/>
                </entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/emdash"/>
                </entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/emdash"/>
                </entry>
                <entry class="- topic/entry ">200</entry>
                <entry class="- topic/entry ">mA</entry>
              </row>
              <row class="- topic/row ">
                <entry class="- topic/entry ">Current per I/O pin (sink)</entry>
                <entry class="- topic/entry " morerows="1">I<sub class="+ topic/ph hi-d/sub ">IOMAX</sub></entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/nbsp"/>
                </entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/emdash"/>
                </entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/emdash"/>
                </entry>
                <entry class="- topic/entry ">50</entry>
                <entry class="- topic/entry ">mA</entry>
              </row>
              <row class="- topic/row ">
                <entry class="- topic/entry ">Current per I/O pin (source)</entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/nbsp"/>
                </entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/emdash"/>
                </entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/emdash"/>
                </entry>
                <entry class="- topic/entry ">50</entry>
                <entry class="- topic/entry ">mA</entry>
              </row>
              <row class="- topic/row ">
                <entry class="- topic/entry ">Current for all I/O pins (sink)</entry>
                <entry class="- topic/entry " morerows="1">I<sub class="+ topic/ph hi-d/sub ">IOALLMAX</sub></entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/nbsp"/>
                </entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/emdash"/>
                </entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/emdash"/>
                </entry>
                <entry class="- topic/entry ">200</entry>
                <entry class="- topic/entry ">mA</entry>
              </row>
              <row class="- topic/row ">
                <entry class="- topic/entry ">Current for all I/O pins (source)</entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/nbsp"/>
                </entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/emdash"/>
                </entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/emdash"/>
                </entry>
                <entry class="- topic/entry ">200</entry>
                <entry class="- topic/entry ">mA</entry>
              </row>
              <row class="- topic/row ">
                <entry class="- topic/entry ">Voltage difference between AVDD and VREGVDD</entry>
                <entry class="- topic/entry "><ph class="- topic/ph " conkeyref="keys/Delta"/>V<sub class="+ topic/ph hi-d/sub ">DD</sub></entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/nbsp"/>
                </entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/emdash"/>
                </entry>
                <entry class="- topic/entry ">
                  <ph class="- topic/ph " conkeyref="keys/emdash"/>
                </entry>
                <entry class="- topic/entry ">0.3</entry>
                <entry class="- topic/entry ">V</entry>
              </row>
              <row class="- topic/row ">
                <entry class="- topic/entry " nameend="c_6" namest="c_0">
                  <note class="- topic/note ">
                    <ol class="- topic/ol " outputclass="tablenote">
                      <li class="- topic/li " id="Max.table.footnote.0">
                        <p class="- topic/p ">When a GPIO pin is routed to the analog module through the APORT, the maximum voltage = IOVDD.</p>
                      </li>
                    </ol>
                  </note>
                </entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p>
    </section>
  </refbody>
</reference>